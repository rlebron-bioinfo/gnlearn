% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithms.R
\name{arges}
\alias{arges}
\title{Adaptively Restricted Greedy Equivalence Search Algorithm (ARGES)}
\usage{
arges(
  df,
  whitelist = NULL,
  blacklist = NULL,
  indep.test = pcalg::gaussCItest,
  alpha = 0.01,
  max.sx = Inf,
  adaptive = c("none", "vstructures", "triples"),
  maxDegree = integer(0),
  m = NULL,
  to = c("igraph", "adjacency", "edges", "graph", "bnlearn"),
  seed = NULL
)
}
\arguments{
\item{df}{Dataset.}

\item{whitelist}{A data frame with two columns, containing a set of arcs to be included in the graph (optional).}

\item{blacklist}{A data frame with two columns, containing a set of arcs not to be included in the graph (optional).}

\item{indep.test}{Conditional independence test to be used (pcalg implementation). Default: pcalg::gaussCItest}

\item{alpha}{Target nominal type I error rate. Default: 0.01}

\item{max.sx}{Maximum allowed size of the conditioning sets.}

\item{adaptive}{Whether constraints should be adapted to newly detected v-structures or unshielded triples: 'none', 'vstructures', or 'triples'. Default: 'none'}

\item{maxDegree}{Parameter used to limit the vertex degree of the estimated graph. Default: integer(0)}

\item{m}{Size of training set (optional). Default: nrow(df)/2}

\item{to}{Output format ('adjacency', 'edges', 'graph', 'igraph', or 'bnlearn') (optional).}

\item{seed}{Seed used for random selection. Default: NULL}
}
\description{
This function allows you to learn a directed graph from a dataset using the Adaptively Restricted Greedy Equivalence Search (ARGES) algorithm.
}
\examples{
g <- arges(df)
}
\keyword{graph}
\keyword{learning}
